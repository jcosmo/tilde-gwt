/* DO NOT EDIT: File is auto-generated */
package <%= service.data_module.jws.service_package %>;

<%= description_javadoc_for(service, "") %>@javax.annotation.Generated( "Domgen" )
@SuppressWarnings( { "UnusedDeclaration", "JavaDoc" } )
<% if service.jws.cxf_annotations? && service.tags[:Description] -%>
@org.apache.cxf.annotations.WSDLDocumentationCollection({
  @org.apache.cxf.annotations.WSDLDocumentation("<%= service.tags[:Description] %>")
})
<% end -%>
@javax.jws.WebService
public interface <%= service.jws.service_name %>
  extends java.rmi.Remote
{
<% service.methods.select{|method| method.jws?}.each do |method|
%><%= description_javadoc_for(method)
%>  @javax.jws.WebMethod( operationName = "<%= method.name %>" )
  <%= service.jws.cxf_annotations? && method.tags[:Description] ? "@org.apache.cxf.annotations.WSDLDocumentation(\"#{method.tags[:Description]}\")" : "" %>
  <%= annotated_type(method.return_value, :jws, :boundary) %> <%= Domgen::Naming.camelize(method.name) %>(<%= method.parameters.collect{|p| "@javax.jws.WebParam( name = \"#{p.name}\", mode = javax.jws.WebParam.Mode.IN, header = false ) #{annotated_type(p, :jws, :boundary)} #{Domgen::Naming.camelize(p.name)}" }.join(",\n      ") %>)<%=
    exceptions = ["java.rmi.RemoteException"] + method.exceptions.collect{|e| e.ee.qualified_name}
    "\n    throws #{exceptions.join(', ')}"
%>;

<% end %>}
